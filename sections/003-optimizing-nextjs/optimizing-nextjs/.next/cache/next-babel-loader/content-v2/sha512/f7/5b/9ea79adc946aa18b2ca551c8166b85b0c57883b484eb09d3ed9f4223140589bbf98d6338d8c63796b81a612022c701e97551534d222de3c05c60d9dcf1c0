{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Head from \"next/head\";\nimport { getAllEvents } from \"../../helpers/api-util\";\nimport EventList from \"../../components/events/event-list\";\nimport EventsSearch from \"../../components/events/events-search\";\n\nfunction AllEventsPage(props) {\n  const router = useRouter();\n  const {\n    events\n  } = props;\n\n  function findEventsHandler(year, month) {\n    const fullPath = `/events/${year}/${month}`;\n    router.push(fullPath);\n  }\n\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"All Events\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"This is a meta tag!\"\n      })]\n    }), /*#__PURE__*/_jsx(EventsSearch, {\n      onSearch: findEventsHandler\n    }), /*#__PURE__*/_jsx(EventList, {\n      items: events\n    })]\n  });\n}\n\nexport async function getStaticProps() {\n  const events = await getAllEvents();\n  return {\n    props: {\n      events: events\n    },\n    revalidate: 60\n  };\n}\nexport default AllEventsPage;","map":null,"metadata":{},"sourceType":"module"}